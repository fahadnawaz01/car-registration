import React, { useState } from "react";
import "./Registration.css";
import web3 from "../../web3";
import { useNavigate } from "react-router-dom";

const abi = [
  {
    constant: true,
    inputs: [],
    name: "carInfo",
    outputs: [
      { name: "carNumber", type: "string" },
      { name: "insuranceDetails", type: "string" },
      { name: "model", type: "string" },
      { name: "color", type: "string" },
      { name: "registrationDate", type: "string" },
      { name: "ownerName", type: "string" },
      { name: "ownerBirthDate", type: "string" },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      { name: "_vinNumber", type: "string" },
      { name: "_engineType", type: "string" },
      { name: "_transmissionType", type: "string" },
      { name: "_mileage", type: "uint256" },
      { name: "_fuelType", type: "string" },
      { name: "_bodyType", type: "string" },
      { name: "_numberOfDoors", type: "uint8" },
      { name: "_numberOfSeats", type: "uint8" },
    ],
    name: "setAdditionalCarDetails",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [],
    name: "cancelOwnershipTransfer",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "additionalDetails",
    outputs: [
      { name: "vinNumber", type: "string" },
      { name: "engineType", type: "string" },
      { name: "transmissionType", type: "string" },
      { name: "mileage", type: "uint256" },
      { name: "fuelType", type: "string" },
      { name: "bodyType", type: "string" },
      { name: "numberOfDoors", type: "uint8" },
      { name: "numberOfSeats", type: "uint8" },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      { name: "_newOwnerName", type: "string" },
      { name: "_newOwnerBirthDate", type: "string" },
    ],
    name: "acceptOwnershipTransfer",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "getCarDetails",
    outputs: [
      { name: "carNumber", type: "string" },
      { name: "insuranceDetails", type: "string" },
      { name: "model", type: "string" },
      { name: "color", type: "string" },
      { name: "registrationDate", type: "string" },
      { name: "ownerName", type: "string" },
      { name: "ownerBirthDate", type: "string" },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "owner",
    outputs: [{ name: "", type: "address" }],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      { name: "_carNumber", type: "string" },
      { name: "_insuranceDetails", type: "string" },
      { name: "_model", type: "string" },
      { name: "_color", type: "string" },
      { name: "_registrationDate", type: "string" },
      { name: "_ownerName", type: "string" },
      { name: "_ownerBirthDate", type: "string" },
    ],
    name: "updateCarDetails",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "getCurrentOwner",
    outputs: [{ name: "", type: "address" }],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [{ name: "_newOwner", type: "address" }],
    name: "initiateOwnershipTransfer",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "newOwner",
    outputs: [{ name: "", type: "address" }],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { name: "_carNumber", type: "string" },
      { name: "_insuranceDetails", type: "string" },
      { name: "_model", type: "string" },
      { name: "_color", type: "string" },
      { name: "_registrationDate", type: "string" },
      { name: "_ownerName", type: "string" },
      { name: "_ownerBirthDate", type: "string" },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, name: "previousOwner", type: "address" },
      { indexed: true, name: "newOwner", type: "address" },
      { indexed: false, name: "carNumber", type: "string" },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
];
const RegistrationPage = () => {
  const [ownerName, setOwnerName] = useState("");
  const [ownerBirthdate, setOwnerBirthdate] = useState("");
  const [carNumber, setCarNumber] = useState("");
  const [model, setModel] = useState("");
  const [color, setColor] = useState("");
  const [registrationDate, setRegistrationDate] = useState("");
  const [insuranceDetails, setInsuranceDetails] = useState("");
  const navigate = useNavigate();

  const handleSubmit = async (event) => {
    event.preventDefault(); // Prevent default form submission
    const accounts = await web3.eth.getAccounts();

    const contract = await new web3.eth.Contract(abi)
      .deploy({
        data: "60806040523480156200001157600080fd5b5060405162001e3938038062001e398339810160408181528251602080850151838601516060808801516080808a015160a0808c015160c0808e015160008054600160a060020a0319163317905560e08e018d529a8e01808e52988e018a8e01819052978e019b8d018c9052948d01958c01869052918c01928b01839052908b01908a01819052969099019088018190528351939892979195929492939092600991620000c4918391908c019062000186565b506020828101518051620000df926001850192019062000186565b5060408201518051620000fd91600284019160209091019062000186565b50606082015180516200011b91600384019160209091019062000186565b50608082015180516200013991600484019160209091019062000186565b5060a082015180516200015791600584019160209091019062000186565b5060c082015180516200017591600684019160209091019062000186565b50905050505050505050506200022b565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620001c957805160ff1916838001178555620001f9565b82800160010185558215620001f9579182015b82811115620001f9578251825591602001919060010190620001dc565b50620002079291506200020b565b5090565b6200022891905b8082111562000207576000815560010162000212565b90565b611bfe806200023b6000396000f3006080604052600436106100ae5763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166312c6e8e281146100b357806318105276146103a757806323452b9c1461051057806331f4b58a146105255780635f355dee1461076b5780636a383f16146108025780638da5cb5b146108175780639a339b5514610848578063a18a186b14610a15578063c0b6f56114610a2a578063d4ee1d9014610a4b575b600080fd5b3480156100bf57600080fd5b506100c8610a60565b604051808060200180602001806020018060200180602001806020018060200188810388528f818151815260200191508051906020019080838360005b8381101561011d578181015183820152602001610105565b50505050905090810190601f16801561014a5780820380516001836020036101000a031916815260200191505b5088810387528e818151815260200191508051906020019080838360005b83811015610180578181015183820152602001610168565b50505050905090810190601f1680156101ad5780820380516001836020036101000a031916815260200191505b5088810386528d5181528d516020918201918f019080838360005b838110156101e05781810151838201526020016101c8565b50505050905090810190601f16801561020d5780820380516001836020036101000a031916815260200191505b5088810385528c5181528c516020918201918e019080838360005b83811015610240578181015183820152602001610228565b50505050905090810190601f16801561026d5780820380516001836020036101000a031916815260200191505b5088810384528b5181528b516020918201918d019080838360005b838110156102a0578181015183820152602001610288565b50505050905090810190601f1680156102cd5780820380516001836020036101000a031916815260200191505b5088810383528a5181528a516020918201918c019080838360005b838110156103005781810151838201526020016102e8565b50505050905090810190601f16801561032d5780820380516001836020036101000a031916815260200191505b5088810382528951815289516020918201918b019080838360005b83811015610360578181015183820152602001610348565b50505050905090810190601f16801561038d5780820380516001836020036101000a031916815260200191505b509e50505050505050505050505050505060405180910390f35b3480156103b357600080fd5b506040805160206004803580820135601f810184900484028501840190955284845261050e94369492936024939284019190819084018382808284375050604080516020601f89358b018035918201839004830284018301909452808352979a99988101979196509182019450925082915084018382808284375050604080516020601f89358b018035918201839004830284018301909452808352979a99988101979196509182019450925082915084018382808284375050604080516020601f818a01358b0180359182018390048302840183018552818452989b8a359b909a90999401975091955091820193509150819084018382808284375050604080516020601f89358b018035918201839004830284018301909452808352979a9998810197919650918201945092508291508401838280828437509497505060ff8535811696506020909501359094169350610e6292505050565b005b34801561051c57600080fd5b5061050e610f70565b34801561053157600080fd5b5061053a611017565b6040518080602001806020018060200189815260200180602001806020018860ff1660ff1681526020018760ff1660ff16815260200186810386528e818151815260200191508051906020019080838360005b838110156105a557818101518382015260200161058d565b50505050905090810190601f1680156105d25780820380516001836020036101000a031916815260200191505b5086810385528d5181528d516020918201918f019080838360005b838110156106055781810151838201526020016105ed565b50505050905090810190601f1680156106325780820380516001836020036101000a031916815260200191505b5086810384528c5181528c516020918201918e019080838360005b8381101561066557818101518382015260200161064d565b50505050905090810190601f1680156106925780820380516001836020036101000a031916815260200191505b5086810383528a5181528a516020918201918c019080838360005b838110156106c55781810151838201526020016106ad565b50505050905090810190601f1680156106f25780820380516001836020036101000a031916815260200191505b5086810382528951815289516020918201918b019080838360005b8381101561072557818101518382015260200161070d565b50505050905090810190601f1680156107525780820380516001836020036101000a031916815260200191505b509d505050505050505050505050505060405180910390f35b34801561077757600080fd5b506040805160206004803580820135601f810184900484028501840190955284845261050e94369492936024939284019190819084018382808284375050604080516020601f89358b018035918201839004830284018301909452808352979a99988101979196509182019450925082915084018382808284375094975061130f9650505050505050565b34801561080e57600080fd5b506100c86114bc565b34801561082357600080fd5b5061082c6118d8565b60408051600160a060020a039092168252519081900360200190f35b34801561085457600080fd5b506040805160206004803580820135601f810184900484028501840190955284845261050e94369492936024939284019190819084018382808284375050604080516020601f89358b018035918201839004830284018301909452808352979a99988101979196509182019450925082915084018382808284375050604080516020601f89358b018035918201839004830284018301909452808352979a99988101979196509182019450925082915084018382808284375050604080516020601f89358b018035918201839004830284018301909452808352979a99988101979196509182019450925082915084018382808284375050604080516020601f89358b018035918201839004830284018301909452808352979a99988101979196509182019450925082915084018382808284375050604080516020601f89358b018035918201839004830284018301909452808352979a99988101979196509182019450925082915084018382808284375050604080516020601f89358b018035918201839004830284018301909452808352979a9998810197919650918201945092508291508401838280828437509497506118e79650505050505050565b348015610a2157600080fd5b5061082c611a04565b348015610a3657600080fd5b5061050e600160a060020a0360043516611a14565b348015610a5757600080fd5b5061082c611b2b565b60098054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152918391830182828015610ae85780601f10610abd57610100808354040283529160200191610ae8565b820191906000526020600020905b815481529060010190602001808311610acb57829003601f168201915b505050505090806001018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610b865780601f10610b5b57610100808354040283529160200191610b86565b820191906000526020600020905b815481529060010190602001808311610b6957829003601f168201915b50505060028085018054604080516020601f6000196101006001871615020190941695909504928301859004850281018501909152818152959695945090925090830182828015610c185780601f10610bed57610100808354040283529160200191610c18565b820191906000526020600020905b815481529060010190602001808311610bfb57829003601f168201915b5050505060038301805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152949594935090830182828015610ca85780601f10610c7d57610100808354040283529160200191610ca8565b820191906000526020600020905b815481529060010190602001808311610c8b57829003601f168201915b5050505060048301805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152949594935090830182828015610d385780601f10610d0d57610100808354040283529160200191610d38565b820191906000526020600020905b815481529060010190602001808311610d1b57829003601f168201915b5050505060058301805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152949594935090830182828015610dc85780601f10610d9d57610100808354040283529160200191610dc8565b820191906000526020600020905b815481529060010190602001808311610dab57829003601f168201915b5050505060068301805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152949594935090830182828015610e585780601f10610e2d57610100808354040283529160200191610e58565b820191906000526020600020905b815481529060010190602001808311610e3b57829003601f168201915b5050505050905087565b604080516101008101825289815260208082018a9052918101889052606081018790526080810186905260a0810185905260ff80851660c0830152831660e082015289519091600291610eba918391908d0190611b3a565b506020828101518051610ed39260018501920190611b3a565b5060408201518051610eef916002840191602090910190611b3a565b506060820151600382015560808201518051610f15916004840191602090910190611b3a565b5060a08201518051610f31916005840191602090910190611b3a565b5060c08201516006909101805460e09093015160ff9081166101000261ff00199190931660ff1990941693909317929092161790555050505050505050565b600054600160a060020a03163314610ff8576040805160e560020a62461bcd02815260206004820152602e60248201527f4f6e6c79207468652063757272656e74206f776e65722063616e20706572666f60448201527f726d207468697320616374696f6e000000000000000000000000000000000000606482015290519081900360840190fd5b6001805473ffffffffffffffffffffffffffffffffffffffff19169055565b60028054604080516020601f6000196101006001871615020190941685900493840181900481028201810190925282815291839183018282801561109c5780601f106110715761010080835404028352916020019161109c565b820191906000526020600020905b81548152906001019060200180831161107f57829003601f168201915b505050505090806001018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561113a5780601f1061110f5761010080835404028352916020019161113a565b820191906000526020600020905b81548152906001019060200180831161111d57829003601f168201915b50505060028085018054604080516020601f60001961010060018716150201909416959095049283018590048502810185019091528181529596959450909250908301828280156111cc5780601f106111a1576101008083540402835291602001916111cc565b820191906000526020600020905b8154815290600101906020018083116111af57829003601f168201915b50505050600383015460048401805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815295969395939450908301828280156112635780601f1061123857610100808354040283529160200191611263565b820191906000526020600020905b81548152906001019060200180831161124657829003601f168201915b5050505060058301805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529495949350908301828280156112f35780601f106112c8576101008083540402835291602001916112f3565b820191906000526020600020905b8154815290600101906020018083116112d657829003601f168201915b5050506006909301549192505060ff8082169161010090041688565b600154600160a060020a03163314611397576040805160e560020a62461bcd02815260206004820152603460248201527f4f6e6c7920746865206e6577206f776e65722063616e2061636365707420746860448201527f65206f776e657273686970207472616e73666572000000000000000000000000606482015290519081900360840190fd5b600180546000546040805160208082526009805460026000199882161561010002989098011696909604908201819052600160a060020a039485169593909416937f5a9a45d8afb2a806bfa13b5e2722bd156685b828d0271ba8838d85f283593fdb9392829190820190849080156114505780601f1061142557610100808354040283529160200191611450565b820191906000526020600020905b81548152906001019060200180831161143357829003601f168201915b50509250505060405180910390a3600180546000805473ffffffffffffffffffffffffffffffffffffffff19908116600160a060020a0384161790915516905581516114a390600e906020850190611b3a565b5080516114b790600f906020840190611b3a565b505050565b6009805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181526060938493849384938493849384939192600a92600b92600c92600d92600e92600f929189918301828280156115665780601f1061153b57610100808354040283529160200191611566565b820191906000526020600020905b81548152906001019060200180831161154957829003601f168201915b5050895460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152959c508b9450925084019050828280156115f45780601f106115c9576101008083540402835291602001916115f4565b820191906000526020600020905b8154815290600101906020018083116115d757829003601f168201915b5050885460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152959b508a9450925084019050828280156116825780601f1061165757610100808354040283529160200191611682565b820191906000526020600020905b81548152906001019060200180831161166557829003601f168201915b5050875460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152959a50899450925084019050828280156117105780601f106116e557610100808354040283529160200191611710565b820191906000526020600020905b8154815290600101906020018083116116f357829003601f168201915b5050865460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529599508894509250840190508282801561179e5780601f106117735761010080835404028352916020019161179e565b820191906000526020600020905b81548152906001019060200180831161178157829003601f168201915b5050855460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529598508794509250840190508282801561182c5780601f106118015761010080835404028352916020019161182c565b820191906000526020600020905b81548152906001019060200180831161180f57829003601f168201915b5050845460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152959750869450925084019050828280156118ba5780601f1061188f576101008083540402835291602001916118ba565b820191906000526020600020905b81548152906001019060200180831161189d57829003601f168201915b50505050509050965096509650965096509650965090919293949596565b600054600160a060020a031681565b600054600160a060020a0316331461196f576040805160e560020a62461bcd02815260206004820152602e60248201527f4f6e6c79207468652063757272656e74206f776e65722063616e20706572666f60448201527f726d207468697320616374696f6e000000000000000000000000000000000000606482015290519081900360840190fd5b86516119829060099060208a0190611b3a565b50855161199690600a906020890190611b3a565b5084516119aa90600b906020880190611b3a565b5083516119be90600c906020870190611b3a565b5082516119d290600d906020860190611b3a565b5081516119e690600e906020850190611b3a565b5080516119fa90600f906020840190611b3a565b5050505050505050565b600054600160a060020a03165b90565b600054600160a060020a03163314611a9c576040805160e560020a62461bcd02815260206004820152602e60248201527f4f6e6c79207468652063757272656e74206f776e65722063616e20706572666f60448201527f726d207468697320616374696f6e000000000000000000000000000000000000606482015290519081900360840190fd5b600160a060020a0381161515611afc576040805160e560020a62461bcd02815260206004820152601960248201527f496e76616c6964206e6577206f776e6572206164647265737300000000000000604482015290519081900360640190fd5b6001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600154600160a060020a031681565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611b7b57805160ff1916838001178555611ba8565b82800160010185558215611ba8579182015b82811115611ba8578251825591602001919060010190611b8d565b50611bb4929150611bb8565b5090565b611a1191905b80821115611bb45760008155600101611bbe5600a165627a7a723058207a2b09c0eff75be91ec9b0490cafb72c37ba61686d1663cf7476a257168d1f330029",
        arguments: [
          carNumber,
          insuranceDetails,
          model,
          color,
          registrationDate,
          ownerName,
          ownerBirthdate,
        ],
      })
      .send({ from: accounts[0], gas: "2000000" });

    console.log("contract deployed to", contract.options.address);
    localStorage.setItem("ContractId", contract.options.address);
    navigate("/registration2");
  };

  return (
    <div className="reg">
      <form onSubmit={handleSubmit} className="registration-form">
        <h2 className="registration-header">Car Registration</h2>

        <label className="form-label">
          Owner Name:
          <input
            type="text"
            value={ownerName}
            onChange={(e) => setOwnerName(e.target.value)}
            required
            className="owner-name-input"
          />
        </label>

        <label className="form-label">
          Owner Birthdate:
          <input
            type="date"
            value={ownerBirthdate}
            onChange={(e) => setOwnerBirthdate(e.target.value)}
            required
            className="owner-birthdate-input"
          />
        </label>

        <label className="form-label">
          Car Number:
          <input
            type="text"
            value={carNumber}
            onChange={(e) => setCarNumber(e.target.value)}
            required
            className="car-number-input"
          />
        </label>

        <label className="form-label">
          Model:
          <input
            type="text"
            value={model}
            onChange={(e) => setModel(e.target.value)}
            required
            className="car-model-input"
          />
        </label>

        <label className="form-label">
          Color:
          <input
            type="text"
            value={color}
            onChange={(e) => setColor(e.target.value)}
            required
            className="car-color-input"
          />
        </label>

        <label className="form-label">
          Registration Date:
          <input
            type="date"
            value={registrationDate}
            onChange={(e) => setRegistrationDate(e.target.value)}
            required
            className="registration-date-input"
          />
        </label>

        <label className="form-label insurance-details-label">
          Insurance Details:
          <textarea
            value={insuranceDetails}
            onChange={(e) => setInsuranceDetails(e.target.value)}
            required
            className="insurance-details-textarea"
          />
        </label>

        <button type="submit" className="register-button">
          Next
        </button>
      </form>
    </div>
  );
};

export default RegistrationPage;
